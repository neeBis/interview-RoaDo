{"version":3,"sources":["img/cross.svg","img/tick.svg","store/reducers/index.js","store/reducers/add.js","store/actionTypes.js","store/reducers/complete.js","store/index.js","store/actions/order.js","components/Order.jsx","containers/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","add","state","action","type","active_items","complete","complete_items","store","createStore","rootreducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","addItem","completeItem","Order","props","ids","todo","count","changeTodo","bind","completed","removed","all_but","active_but","complete_but","_handleKeyDown","getItems","this","event","console","log","target","temp","value","temp_active","temp_complete","list","filter","item","id","tp","push","list_active","list_complete","setState","key","name","activeItems","completeItems","map","className","onClick","src","tick","val","cross","onChange","onKeyDown","placeholder","aria-label","aria-describedby","Component","connect","dispatch","a","err","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mNCQ5BC,EALKC,YAAgB,CAChCC,ICFe,WAAsB,IAArBC,EAAoB,uDAAd,GAAGC,EAAW,uCACpC,OAAOA,EAAOC,MAEV,ICLc,WDMV,MAAO,CACHC,aAAaF,EAAOE,cAE5B,QACI,OAAOH,IDLfI,SGHoB,WAAsB,IAArBJ,EAAoB,uDAAd,GAAGC,EAAW,uCACzC,OAAOA,EAAOC,MAEV,IDHmB,gBCIf,MAAO,CACHG,eAAeJ,EAAOI,gBAE9B,QACI,OAAOL,MCJNM,EAAQC,YAAYC,EAHX,GAIlBC,YAAQC,YAAgBC,KACvBC,OAAOC,sCAAsCD,OAAOC,wCAA0CJ,M,wCCPtFK,EAAU,SAACX,GAAD,MAAkB,CAC9BD,KHFW,WGGXC,iBAEEY,EAAe,SAACV,GAAD,MAAoB,CAC5CH,KHJuB,gBGKvBG,mB,+mBCFEW,E,YACE,WAAYC,GAAO,IAAD,8BAClB,4CAAMA,KACDjB,MAAM,CACNkB,IAAI,EACJC,KAAK,GACLC,MAAM,KAEX,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBAChB,EAAKC,UAAU,EAAKA,UAAUD,KAAf,gBACf,EAAKE,QAAQ,EAAKA,QAAQF,KAAb,gBACb,EAAKG,QAAQ,EAAKA,QAAQH,KAAb,gBACb,EAAKI,WAAW,EAAKA,WAAWJ,KAAhB,gBAChB,EAAKK,aAAa,EAAKA,aAAaL,KAAlB,gBAClB,EAAKM,eAAe,EAAKA,eAAeN,KAApB,gBAbF,E,mFAiBnBO,EADmBC,KAAKb,MAAjBY,c,gCAICE,GACJC,QAAQC,IAAIF,EAAMG,QACjB,IAAIC,EAAKJ,EAAMG,OAAOE,MAClBC,EAAYP,KAAKb,MAAMd,aACvBmC,EAAcR,KAAKb,MAAMZ,eAC1BkC,EAAKF,EAAYG,QAAO,SAASC,GAChC,OAAOA,EAAKC,IAAMP,KAEzB,IAAI,IAAIQ,KAAMN,EAEPA,EAAYM,GAAID,IAAMP,GAAMG,EAAcM,KAAKP,EAAYM,IAE/Db,KAAKb,MAAMH,QAAQyB,GACnBT,KAAKb,MAAMF,aAAauB,K,8BAGvBP,GACL,IAAII,EAAKJ,EAAMG,OAAOE,MAClBC,EAAYP,KAAKb,MAAMd,aACvBmC,EAAcR,KAAKb,MAAMZ,eACzBwC,EAAYR,EAAYG,QAAO,SAASC,GACxC,OAAOA,EAAKC,IAAMP,KAElBW,EAAcR,EAAcE,QAAO,SAASC,GAC5C,OAAOA,EAAKC,IAAMP,KAEtBL,KAAKb,MAAMH,QAAQ+B,GACnBf,KAAKb,MAAMF,aAAa+B,K,iCAGhBf,GAGPD,KAAKiB,SAAL,KACOjB,KAAK9B,MADZ,CAEImB,KAAKY,EAAMG,OAAOE,W,qCAGXL,GAEX,GAAgB,SAAbA,EAAMiB,IACT,CAEIhB,QAAQC,IAAIH,KAAK9B,MAAMmB,MACvB,IAAIwB,EAAGb,KAAK9B,MAAMoB,MAAM,EACxBU,KAAKiB,SAAL,KACQjB,KAAK9B,MADb,CAEKoB,MAAMuB,KAEZ,IAAIN,EAAYP,KAAKb,MAAMd,aAC1BkC,EAAYO,KAAK,CAACF,GAAGZ,KAAK9B,MAAMoB,MAAM6B,KAAKnB,KAAK9B,MAAMmB,OACtDW,KAAKb,MAAMH,QAAQuB,M,8BAGnBN,GAEJD,KAAKiB,SAAL,KACOjB,KAAK9B,MADZ,CAEIkB,IAAI,O,iCAGAa,GAERD,KAAKiB,SAAL,KACOjB,KAAK9B,MADZ,CAEIkB,IAAI,O,mCAGEa,GAEVD,KAAKiB,SAAL,KACOjB,KAAK9B,MADZ,CAEIkB,IAAI,O,+BAIJ,IAAD,OACLc,QAAQC,IAAIH,KAAKb,OAEhB,IAAIiC,EAAY,GACZC,EAAc,GACdZ,EAAK,GAYX,OAXKT,KAAKb,MAAMd,eAEV+C,EAAcpB,KAAKb,MAAMd,aAAaiD,KAAI,SAAAX,GAAI,OAAK,wBAAIO,IAAKP,EAAKC,IAAd,IAAmB,4BAASxC,KAAK,SAAUmD,UAAU,gBAAgBjB,MAAOK,EAAKC,GAAIY,QAAS,EAAK/B,WAAW,yBAAKgC,IAAKC,IAAMC,IAAKhB,EAAKC,MAAxI,IAA6JD,EAAKQ,KAAlK,IAAwK,4BAAS/C,KAAK,SAAUmD,UAAU,cAAcjB,MAAOK,EAAKC,GAAIY,QAAS,EAAK9B,SAAS,yBAAK+B,IAAKG,OAAzQ,SAEpD5B,KAAKb,MAAMZ,iBAEV8C,EAAgBrB,KAAKb,MAAMZ,eAAe+C,KAAI,SAAAX,GAAI,OAAK,wBAAIO,IAAKP,EAAKC,IAAKD,EAAKQ,KAAxB,IAA8B,4BAAQ/C,KAAK,SAAUmD,UAAU,cAAcjB,MAAOK,EAAKC,GAAIY,QAAS,EAAK9B,SAAS,yBAAK+B,IAAKG,OAA9H,SAEtC,GAAlB5B,KAAK9B,MAAMkB,KAAUqB,EAAKW,GAAiBN,KAAKO,EAAcC,KAAI,SAAAX,GAAI,OAAIA,MAChDF,EAAH,GAAlBT,KAAK9B,MAAMkB,IAAiBgC,EAAYE,KAAI,SAAAX,GAAI,OAAIA,KAChDU,EAAcC,KAAI,SAAAX,GAAI,OAAIA,KACjC,kBAAC,WAAD,KACG,yBAAKY,UAAU,qBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACZ,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,aAAf,QACA,yBAAKA,UAAU,QACZ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,mBAAmBX,GAAG,gBAAtC,MACrC,2BAAOxC,KAAK,OAAOmD,UAAU,eAAeM,SAAU7B,KAAKT,WAAYuC,UAAW9B,KAAKF,eAAgBiC,YAAY,qBAAqBC,aAAW,WAAWC,mBAAiB,kBAElL,yBAAKV,UAAU,YAAW,0BAAMC,QAASxB,KAAKL,SAApB,OAAuC,0BAAM6B,QAASxB,KAAKJ,YAApB,UAA6C,0BAAM4B,QAASxB,KAAKH,cAApB,cAC7G,4BAAKY,a,GA9HrByB,aAuILC,eAAQ,SAAA3D,GAAK,MAAG,CAC3BH,aAAaG,EAAMP,IAAII,aACvBE,eAAeC,EAAMF,SAASC,kBAElC,CAACS,UAAQC,eAAac,SDtIE,WAEhB,8CAAO,WAAMqC,GAAN,eAAAC,EAAA,sDACH,IAEOhB,EAAc,CAAC,CAACT,GAAG,GAAGO,KAAK,eAAe,CAACP,GAAG,GAAGO,KAAK,cAAc,CAACP,GAAG,GAAGO,KAAK,gBACpFiB,EAASpD,EAFO,CAAC,CAAC4B,GAAG,EAAEO,KAAK,eAAe,CAACP,GAAG,EAAEO,KAAK,cAAc,CAACP,GAAG,EAAEO,KAAK,kBAG/EiB,EAASnD,EAAaoC,IAEzB,MAAMiB,GAEFpC,QAAQC,IAAImC,GATb,2CAAP,mDAAM,KCgICH,CAKbjD,GC/HaqD,E,iLAVP,OAAQ,kBAAC,IAAD,CAAU/D,MAAOA,GACrB,kBAAC,IAAD,KACI,kBAAC,WAAD,KACI,kBAAC,EAAD,a,GALF0D,aCMEM,QACW,cAA7B1D,OAAO2D,SAASC,UAEe,UAA7B5D,OAAO2D,SAASC,UAEhB5D,OAAO2D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b1f0e0cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.8db7ae2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.c0cbd084.svg\";","import {combineReducers} from 'redux';\nimport {add} from './add';\nimport {complete} from './complete';\nconst rootReducer = combineReducers({\n    add,\n    complete\n});\n\nexport default rootReducer;\n","import {ADD_ITEM} from '../actionTypes';\n\nexport const add = (state=[],action) => {\n    switch(action.type)\n    {\n        case ADD_ITEM:\n            return {\n                active_items:action.active_items\n            }\n        default:\n            return state;\n    }\n}","export const ADD_ITEM='ADD_ITEM';\nexport const REMOVE_ITEM='REMOVE_ITEM';\nexport const COMPLETE_ITEM='COMPLETE_ITEM';\n\n","import {COMPLETE_ITEM} from '../actionTypes';\n\nexport const complete = (state=[],action) => {\n    switch(action.type)\n    {\n        case COMPLETE_ITEM:\n            return {\n                complete_items:action.complete_items\n            }\n        default:\n            return state;\n    }\n}","import {createStore,applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootreducer from './reducers';\nconst DEFAULT_STATE = {\n};\n\nexport const store = createStore(rootreducer,DEFAULT_STATE,\n    compose(applyMiddleware(thunk)\n    ,window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\n    )\n);","import {ADD_ITEM,COMPLETE_ITEM} from '../actionTypes';\nexport const addItem = (active_items) =>({\n           type:ADD_ITEM,\n           active_items\n});\nexport const completeItem = (complete_items) =>({\n    type:COMPLETE_ITEM,\n    complete_items\n});\n\nexport const getItems = () => {\n\n        return async dispatch =>{\n            try{\n               var activeItems=[{id:1,name:'Do Homework'},{id:2,name:'Eat Burger'},{id:3,name:'Drink Pepsi'}];\n               var completeItems=[{id:11,name:'Order Pizza'},{id:12,name:'Skype Mona'},{id:13,name:'Meet Herman'}];\n               dispatch(addItem(activeItems));\n               dispatch(completeItem(completeItems));\n            }\n            catch(err)\n            {\n                console.log(err);\n            }\n        }\n};\n\n","import React,{Component,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {completeItem,addItem,getItems} from '../store/actions';\nimport tick from '../img/tick.svg';\nimport cross from '../img/cross.svg';\nclass Order extends Component{\n        constructor(props){\n        super(props);\n        this.state={\n             ids:2,\n             todo:'',\n             count:100\n        };\n        this.changeTodo=this.changeTodo.bind(this);\n        this.completed=this.completed.bind(this);\n        this.removed=this.removed.bind(this);\n        this.all_but=this.all_but.bind(this);\n        this.active_but=this.active_but.bind(this);\n        this.complete_but=this.complete_but.bind(this);\n        this._handleKeyDown=this._handleKeyDown.bind(this);\n    }\n    componentWillMount() {\n       const {getItems} = this.props;\n       getItems();\n    }\n\n     completed(event){  \n           console.log(event.target);\n            let temp=event.target.value;\n            let temp_active=this.props.active_items;\n            let temp_complete=this.props.complete_items;\n           var list=temp_active.filter(function(item){\n                return item.id != temp;\n            });\n         for(let tp in temp_active)\n         {\n             if(temp_active[tp].id == temp){temp_complete.push(temp_active[tp]);}\n            }\n            this.props.addItem(list);\n            this.props.completeItem(temp_complete);\n     }\n\n     removed(event){\n        let temp=event.target.value;\n        let temp_active=this.props.active_items;\n        let temp_complete=this.props.complete_items;\n        let list_active=temp_active.filter(function(item){\n            return item.id != temp;\n            });\n        let list_complete=temp_complete.filter(function(item){\n            return item.id != temp;\n            });\n        this.props.addItem(list_active);\n        this.props.completeItem(list_complete);\n     }\n\n     changeTodo(event)\n     {\n         //console.log(event.target.value);\n         this.setState({\n             ...this.state,\n             todo:event.target.value\n         });\n     }\n     _handleKeyDown(event)\n     {\n         if(event.key == 'Enter')\n         { \n           \n             console.log(this.state.todo);\n             let tp=this.state.count+1;\n             this.setState({\n                  ...this.state,\n                  count:tp\n             });\n            let temp_active=this.props.active_items;\n             temp_active.push({id:this.state.count,name:this.state.todo});\n             this.props.addItem(temp_active);\n         }\n     }\n     all_but(event)\n      {\n         this.setState({\n             ...this.state,\n             ids:1\n         })\n      }\n      active_but(event)\n      {\n         this.setState({\n             ...this.state,\n             ids:2\n         })\n      }\n      complete_but(event)\n      {\n         this.setState({\n             ...this.state,\n             ids:3\n         })\n      }\n\n    render(){\n       console.log(this.props);\n        // var allItems=[];\n        var activeItems=[];\n        var completeItems=[];\n        var list=[];\n        if(this.props.active_items)\n        {\n            activeItems = this.props.active_items.map(item => (<li key={item.id}> <button  type=\"button\"  className=\"complete_item\" value={item.id} onClick={this.completed}><img src={tick} val={item.id}></img></button> {item.name} <button  type=\"button\"  className=\"remove_item\" value={item.id} onClick={this.removed}><img src={cross}/></button> </li>));\n        }\n        if(this.props.complete_items)\n        {\n            completeItems = this.props.complete_items.map(item => (<li key={item.id}>{item.name} <button type=\"button\"  className=\"remove_item\" value={item.id} onClick={this.removed}><img src={cross}/></button> </li>));\n        } \n        if(this.state.ids == 1){list=activeItems;list.push(completeItems.map(item => item)); }\n        else if(this.state.ids == 2){list = activeItems.map(item => item)}\n        else {list= completeItems.map(item => item)}\n      return <Fragment>\n                <div className=\"order text-center\">\n                    <div className=\"container\">\n                        <div className=\"row\">                            \n                           <div className=\"col-md-6 offset-md-3 \">\n                               <div className=\"list_head\">TODO</div>\n                               <div className=\"card\">\n                                  <div className=\"input-group mb-3\">\n                                      <div className=\"input-group-prepend\"><span className=\"input-group-text\" id=\"basic-addon1\">@</span></div>\n                                      <input type=\"text\" className=\"form-control\" onChange={this.changeTodo} onKeyDown={this._handleKeyDown} placeholder=\"What's to be done?\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\n                                   </div>\n                                   <div className=\"span_but\"><span onClick={this.all_but}>ALL</span><span onClick={this.active_but}>ACTIVE</span><span onClick={this.complete_but}>COMPLETED</span></div>\n                                    <ul>{list}</ul>   \n                               </div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n        </Fragment>\n    }\n}\nexport default connect(store=>({\n    active_items:store.add.active_items,\n    complete_items:store.complete.complete_items,\n}),\n{addItem,completeItem,getItems}\n)(Order);","import React,{Component,Fragment} from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {store} from '../store';\nimport Order from '../components/Order';\n\nclass App extends Component {\n    render(){\n        return (<Provider store={store}>\n            <Router>\n                <Fragment>\n                    <Order/>  \n                </Fragment>\n            </Router>\n            </Provider>\n        )\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}